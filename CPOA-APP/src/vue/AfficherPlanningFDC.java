/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import donnée.Bdd;
import java.net.URL;
import java.sql.Connection;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.UIManager;
import métier.Date;
import métier.Film;
import métier.Horaire;
import métier.MultilineTableCellRenderer;
import métier.Salle;
import métier.Seance;
/**
 *
 * @author etien
 */
public class AfficherPlanningFDC extends javax.swing.JFrame {
    private static int idPlanning;
    private static final Connection conn = Bdd.coBdd();
    
            
    private static Object[][] PlanningTab = new Object[13][6];
    private static String[] nomColPlanning = {"Jours", "Salle 1", "Salle 2","Salle 3","Salle 4","Salle 5"};
    private static String[][] tabSeance = Seance.getSeancesFormPlanning(idPlanning);
    private static String[][] tabDate = Date.recupDate();
    private static String[][] tabFilm = Film.recupFilm();
    private static String[][] tabHoraire = Horaire.recupHoraire();
    private static String[][] tabSalle = Salle.recupSalle();
    
    /**
     * Creates new form CréerUnPlanningFDC
     */
    public AfficherPlanningFDC() {
        for(int i=1 ;i < tabSalle.length;i++){
            nomColPlanning[i] = tabSalle[i-1][0];
        }
        for(int i=0;i < tabDate.length;i++){
            PlanningTab[i][0] = tabDate[i][0];
        }
        
        initComponents();
        URL iconURL = getClass().getResource("/vue/LogoFDC.png");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        majEDT();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Affichage planning");

        métier.MultilineTableCellRenderer renderer = new MultilineTableCellRenderer();
        jTable1.setDefaultRenderer(String.class, renderer);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            PlanningTab,
            nomColPlanning) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            boolean[] canEdit = new boolean [] {
                false,false,false,false,false,false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(51, 153, 255));
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(255, 204, 102));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1839, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[], int idPlanning) {
        AfficherPlanningFDC.idPlanning = idPlanning;
        
        try {
            UIManager.setLookAndFeel( new FlatDarkLaf() );
        } catch( Exception ex ) {
            System.err.println( "Erreur d'inisialisation de LaF" );
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AfficherPlanningFDC().setVisible(true);
            }
        });
    }
    
    public void majEDT(){
        tabSeance = Seance.getSeancesFormPlanning(idPlanning);
        int indexHoraire=0, indexFilm=0, indexDate=0, indexSalle=0;
        for(int i=0; i < tabSeance.length-1; i++){
            //System.out.println("----------------------------" + i);
            
            
            for (int j = 0; j < tabDate.length; j++) {
                if(tabSeance[i][1].equals(tabDate[j][1])){
                    indexDate = j;
                    //System.out.println(tabDate[indexDate][0]);
                    break;
                }
            }
            for (int j = 0; j < tabSalle.length; j++) {
                if(tabSeance[i][4].equals(tabSalle[j][1])){
                    indexSalle = j;
                    //System.out.println(tabSalle[indexSalle][0]);
                    break;
                }
            }
            for (int j = 0; j < tabHoraire.length; j++) {
                if(tabSeance[i][2].equals(tabHoraire[j][1])){
                    indexHoraire = j;
                    //System.out.println(tabHoraire[indexHoraire][0]);
                    break;
                }
            }
            for (int j = 0; j < tabFilm.length; j++) {
                if(tabSeance[i][5].equals(tabFilm[j][1])){
                    indexFilm = j;
                    //System.out.println(tabFilm[indexFilm][0]);
                    break;
                }
            }

            if(jTable1.getValueAt(indexDate, indexSalle+1) == null){
               
                String film = tabHoraire[indexHoraire][0] +" "+ tabFilm[indexFilm][0];
                
                //System.out.println(film);
                //String[] newRow = {film};
                jTable1.setValueAt(film, indexDate, indexSalle+1);

                
            } else{
               String old = (String) jTable1.getValueAt(indexDate, indexSalle+1);
               String film = tabHoraire[indexHoraire][0] +" "+ tabFilm[indexFilm][0];
               //String[] newRow = {film};
               //String[] Concate = ArrayUtils.addAll(old, newRow);
               jTable1.setValueAt(old + "\n" + film, indexDate, indexSalle+1);
               //jTable1.setValueAt(Concate, Integer.valueOf(tabSeance[i][1]), Integer.valueOf(tabSeance[i][4])); // 1 la date et 4 la salle

            } 
        }
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
